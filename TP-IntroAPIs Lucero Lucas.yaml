openapi: 3.0.0
info:
  description: |
    API de la Heladería Via Apilia. A través de esta API se pueden consultar
    los gustos de helado y realizar pedidos.
  version: "1.0.0"
  title: Heladería Via Apilia
  contact:
    email: devs@heladeria-apilia.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://api.heladeria-apilia.com'
paths:
  /gustos:
    get:
      description: Listar los gustos de helado
      parameters:
      - $ref: '#/components/parameters/tipoGusto'
      responses:
        '200':
          description: Estos son los gustos de helado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gusto'
  /gustos/{gustoId}:
    get:
      description: Ver un gusto particular
      parameters:
      - $ref: '#/components/parameters/gustoId'
      responses:
        '200':
          description: El gusto seleccionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gusto'
        '404':
          description: No se conoce un gusto con tal id
  /pedidos:
    post:
      description: Crear un nuevo pedido a la dirección indicada
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                direccion_entrega:
                  type: string
                  description: dirección en la que se ha de entregar este pedido
              required: [direccion_entrega]
      responses:
        '201':
          description: El pedido ha sido creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
  /pedidos/{pedidoId}:
    get:
      description: Ver un pedido particular
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      responses:
        '200':
          description: El pedido ha sido hallado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
        '404':
          description: No se conoce un pedido con tal id
    put:
      description: Cambiar los datos de un pedido particular
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                direccion_entrega:
                  type: string
                  description: dirección en la que se ha de entregar este pedido
              required: [direccion_entrega]
      responses:
        '200':
          description: El pedido ha sido actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pedido'
        '404':
          description: No se conoce un pedido con tal id
  /pedidos/{pedidoId}/potes:
    get:
      description: Lista los potes que componen un pedido
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      responses:
        '200':
          description: Los potes del pedido
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Pote'
        '404':
          description: No se conoce un pedido con tal id
    post:
      description: Agrega un pote a un pedido
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                peso:
                  $ref: '#/components/schemas/PesoDePote'
                gustos:
                  type: array
                  items:
                    type: string
                  description: los gustos de helado en este pote
                  example: [ddl, pist]
              required: [peso, gustos]
      responses:
        '201':
          description: El pote fue agregado al pedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pote'
        '404':
          description: No se conoce un pedido con tal id
  /pedidos/{pedidoId}/potes/{poteId}:
    delete:
      description: quitar un pote de un pedido
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      - $ref: '#/components/parameters/poteId'
      responses:
        '204':
          description: El pote fue quitado del pedido
        '404':
          description: No se conoce un pedido y/o pote con tal id
  /pedidos/{pedidoId}/pagar:
    post:
      description: Inicia el pago del pedido
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatosDePago'
      responses:
        '202':
          description: Los datos de pago han sido recibidos y serán procesados
        '404':
          description: No se conoce un pedido con tal id
  /pedidos/{pedidoId}/pago:
    get:
      description: Ver el estado del pago de un pedido particular
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      responses:
        '200':
          description: Este es el estado del pago del pedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pago'
        '404':
          description: No se conoce un pedido con tal id
  /pedidos/{pedidoId}/repartidor:
    post:
      description: Asignarle un repartidor a un pedido
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/repartidorId'
      responses:
        '201':
          description: El repartidor fue asignado al pedido
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pedido"
        '400': 
          description: El repartidor que trató de asignar al pedido no existe
        '404':
          description: No se conoce un pedido con tal id 
    put:
      description: Modificar el repartidor asignado al pedido
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/repartidorId'
      responses:
        '200': 
          description: El repartidor del pedido fue modificado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pedido"
        '400': 
          description: El repartidor que trató de asignar al pedido no existe
        '404':
          description: No se conoce un pedido con tal id  
    delete:
      description: Eliminar la asignación de repartidor a un pedido
      parameters:
      - $ref: '#/components/parameters/pedidoId'
      responses:
        '204':
          description: Se ha eliminado la asignación de repartidor en el pedido
        '400': 
          description: El pedido no contaba con repartidor asignado
        '404':
          description: No se conoce un pedido con tal id   
  /repartidores: 
    post:
      description: Agregar un nuevo repartidor 
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CargaRepartidor"
      responses:
        '201':
          description: El repartidor ha sido creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repartidor'
        '400':
          description: Error de validación al intentar crear el repartidor
    get:
      description: Listar a todos los repartidores (opcionalmente filtrados por su edad)
      parameters:
        - $ref: "#/components/parameters/edadRepartidor"
      responses:
        '200':
          description: Estos son los repartidores en el sistema
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repartidor'
        '400':
          description: Error al filtrar por edad
  /repartidores/{repartidorId}:
    get:
      description: Obtener los datos de un repartidor en particular 
      parameters:
      - $ref: '#/components/parameters/repartidorId'
      responses:
        '200':
          description: Este es el repartidor buscado 
          content: 
            application/json:
              schema:
                $ref: "#/components/schemas/Repartidor"
        '404':
          description: No se conoce un repartidor con tal id
    put:
      description: Modificar los datos de un repartidor en particular
      parameters:
      - $ref: '#/components/parameters/repartidorId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CargaRepartidor"
      responses:
        '200':
          description: Los datos del repartidor han sido actualizados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repartidor'
        '404':
          description: No se conoce un repartidor con tal id
    delete:
      description: Borrar un repartidor del sistema
      parameters:
      - $ref: '#/components/parameters/repartidorId'
      responses:
        '204':
          description: El repartidor fue eliminado del sistema
        '404':
          description: No se conoce un repartidor con tal id
  /repartidores/{repartidorId}/vehiculos:
    post:
      description: Agregar un vehículo a un repartidor
      parameters:
      - $ref: "#/components/parameters/repartidorId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CargaVehiculo"
      responses:
        '201':
          description: El vehículo del repartidor ha sido creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehiculo"
        '404':
          description: No se conoce un repartidor con tal id
    get: 
      description: Listar los vehículos de un repartidor
      parameters:
      - $ref: "#/components/parameters/repartidorId"
      responses: 
        '200':
          description: Acá estan todos los vehículos del repartidor
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vehiculo"
        '404':
          description: No se conoce un repartidor con tal id
  /repartidores/{repartidorId}/vehiculos/{vehiculoId}:
    get:
      description: Listar un vehículo particular del repartidor
      parameters:
      - $ref: "#/components/parameters/repartidorId"
      - $ref: "#/components/parameters/vehiculoId"
      responses:
        '200':
          description: Se obtuvo el vehículo del repartidor buscado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehiculo"
        '404':
          description: No se conoce un repartidor con tal id o un vehículo para ese repartidor con ese id
    put:
      description: Modificar un vehículo particular del repartidor
      parameters:
      - $ref: '#/components/parameters/repartidorId'
      - $ref: '#/components/parameters/vehiculoId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CargaVehiculo"
      responses:
        '200':
          description: Los datos del vehículo han sido actualizados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehiculo'
        '404':
          description: No se conoce un repartidor con tal id o un vehículo para ese repartidor con ese id
components:
  parameters:
    gustoId:
      name: gustoId
      in: path
      description: id del gusto
      required: true
      schema:
        type: string
    pedidoId:
      name: pedidoId
      in: path
      description: id del pedido
      required: true
      schema:
        type: integer
    poteId:
      name: poteId
      in: path
      description: id del pote
      required: true
      schema:
        type: integer
    tipoGusto:
      name: tipo
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/TipoDeGusto'
    edadRepartidor:
      name: edad
      in: query
      required: false
      schema:
        description: la edad del repartidor opcional
        type: integer
        minimum: 18
        maximum: 90
        example: 33
    repartidorId:
      name: repartidorId
      in: path
      description: id del repartidor
      required: true
      example: 7
      schema:
        type: integer
    vehiculoId:
      name: vehiculoId
      in: path
      description: id del vehículo del repartidor
      required: true
      example: 3
      schema:
        type: integer
      
  schemas:
    TipoDeGusto:
      description: categoría de gustos de helado
      type: string
      enum:
        - chocolates
        - dulce de leches
        - cremas
        - frutas
      example: dulce de leches
    Gusto:
      description: un gusto de helado
      type: object
      properties:
        id:
          type: string
          description: nombre corto que identifica este gusto
          example: ddl
        nombre:
          type: string
          description: nombre legible por humanos para este gusto
          example: Dulce de leche
        tipo:
          $ref: '#/components/schemas/TipoDeGusto'
      required: [id, nombre, tipo]
    Pedido:
      description: un pedido de helados
      type: object
      properties:
        id:
          type: integer
          description: identificador de este pedido
          example: 22
        direccion_entrega:
          type: string
          description: dirección en la que se ha de entregar este pedido
          example: Lavalleja 244 4C, CABA
        _links:
          type: object
          description: hypermedia links de un pedido
          properties:
            potes: 
              $ref: '#/components/schemas/Link'
            pagar: 
              $ref: '#/components/schemas/Link'
            pago: 
              $ref: '#/components/schemas/Link'
            listar-repartidor:
              $ref: '#/components/schemas/Link'
            asignar-repartidor:
              $ref: '#/components/schemas/Link'
            actualizar-repartidor:
              $ref: '#/components/schemas/Link'
            eliminar-repartidor:
              $ref: '#/components/schemas/Link'
      required: [id, direccion_entrega]
    PesoDePote:
      description: peso de un pote de helado en gramos
      type: string
      enum:
        - "1000"
        - "500"
        - "250"
      example: "500"
    Pote:
      description: un pote de helado dentro de un pedido
      type: object
      properties:
        id:
          type: integer
          description: identificador de este pote dentro del pedido
          example: 1
        peso:
          $ref: '#/components/schemas/PesoDePote'
        gustos:
          type: array
          items:
            type: object
            properties:
              id: 
                type: string
                description: el id del gusto de helado en este pote
                example: ddl
              _links:
                type: object
                description: hypermedia links de un gusto dentro de un pote
                properties:
                  self:
                    $ref: '#/components/schemas/Link'
          description: los gustos de helado en este pote
        _links:
          type: object
          description: hypermedia links de un pote
          properties:
            pedido:
              $ref: '#/components/schemas/Link'
            borrar: 
              $ref: '#/components/schemas/Link'
      required: [id, peso, gustos]
    DatosDePago:
      description: los datos necesarios para iniciar el pago de un pedido
      type: object
      discriminator:
        propertyName: tipoDePago
      properties:
        tipoDePago:
          type: string
          description: se usa para determinar el tipo de pago a usar
          example: DatosDePagoTarjeta
      required: [tipoDePago]
    DatosDePagoBilleteraVirtual:
      description: datos de pago cuando se usa una billetera virtual
      allOf:
      - $ref: '#/components/schemas/DatosDePago'
      - type: object
        properties:
          alias:
            type: string
            description: nombre de usuario o alias de la billetera a utilizar
            example: mi.cuenta.billetera
        required: [alias]
    DatosDePagoTarjeta:
      description: datos de pago cuando se usa tarjeta de crédito
      allOf:
      - $ref: '#/components/schemas/DatosDePago'
      - type: object
        properties:
          numerosTarjeta:
            type: string
            description: los 15 o 16 números de la tarjeta de crédito
            example: "1234567812345678"
          vencimientoTarjetaMes:
            type: number
            format: int8
            minimum: 1
            maximum: 6
            description: el mes del vencimiento de la tarjeta de crédito
            example: 4
          vencimientoTarjetaAnio:
            type: number
            format: int8
            minimum: 0
            maximum: 99
            description: el año de vencimiento de la tarjeta expresado en dos dígitos
            example: 24
        required: [numerosTarjeta, vencimientoTarjetaMes, vencimientoTarjetaAnio]
    Pago:
      description: estado del pago de un pedido
      type: object
      properties:
        status:
          type: string
          enum:
            - pendiente de pago
            - pago en proceso
            - pago aceptado
            - pago fallado
          example: pago aceptado
      required: [status]
    Link:
      description: un link usado para hypermedia
      type: object
      properties:
        href:
          type: string
          format: uri
          description: la URI del link
          example: "http://foo.com/bar"
        verb:
          type: string
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          example: GET
          description: el verbo a usar en el link
    Repartidor:
      description: un repartidor de pedidos
      type: object 
      properties:
        id:
          type: integer
          description: identificador de este repartidor
          example: 7
        nombre:
          type: string
          description: el nombre del repartidor 
          example: Juan 
        apellido: 
          type: string
          description: el apellido del repartidor 
          example: Perez
        cuil: 
          type: string
          description: el cuil del repartidor 
          minLength: 13
          maxLength: 13
          example: 20-08490848-8
        edad: 
          type: integer
          description: la edad del repartidor
          minimum: 18
          maximum: 90
          example: 33
        _links:
          type: object
          description: hypermedia links de un repartidor
          properties:
            pedidos:
              type: array
              items:
                $ref: "#/components/schemas/Link"
            vehiculos:
              $ref: "#/components/schemas/Link"
            borrar: 
              $ref: "#/components/schemas/Link"
    CargaRepartidor:
      description: los campos para cargar un repartidor de pedidos
      type: object
      properties:
        nombre:
          type: string
          description: el nombre del repartidor 
          example: Juan 
        apellido: 
          type: string
          description: el apellido del repartidor 
          example: Perez
        cuil: 
          type: string
          description: el cuil del repartidor 
          minLength: 13
          maxLength: 13
          example: 20-08490848-8
        edad: 
          type: integer
          description: la edad del repartidor
          minimum: 18
          maximum: 90
          example: 33
      required: [nombre,apellido,cuil,edad]
    Vehiculo:
      description: una generalización de un vehículo que puede tener un repartidor
      type: object
      discriminator:
        propertyName: tipoVehiculo
      properties:
        id: 
          type: integer
          description: identificador del vehículo de un repartidor
          example: 3
        tipoVehiculo:
          type: string
          description: se usa para determinar el tipo de vehículo que puede tener un repartidor
          example: Auto
        _links:
          type: object 
          description: hypermedia links de un vehiculo
          properties:
            repartidor:
              $ref: "#/components/schemas/Link"
            borrar: 
              $ref: "#/components/schemas/Link"
    CargaVehiculo:
      description: lo necesario para cargar/modificar un vehículo que puede tener un repartidor
      type: object
      discriminator:
        propertyName: tipoVehiculo
      properties:
        id: 
          type: integer
          description: identificador del vehículo de un repartidor
          example: 3
        tipoVehiculo:
          type: string
          description: se usa para determinar el tipo de vehículo que puede tener un repartidor
          example: Auto
      required: [id,tipoVehiculo]
    Auto:
      description: vehículo con patente 1 - auto
      allOf:
      - $ref: '#/components/schemas/Vehiculo'
      - type: object
        properties:
          patente:
            type: string
            description: la patente del auto
            example: AAA 123
        required: [patente]
    Moto:
      description: vehículo con patente 2 - moto
      allOf:
      - $ref: '#/components/schemas/Vehiculo'
      - type: object
        properties:
          patente:
            type: string
            description: la patente de la moto
            example: BBB 456
        required: [patente]
    Bicicleta:
      description: vehículo con rodado - bici
      allOf:
      - $ref: '#/components/schemas/Vehiculo'
      - type: object
        properties:
          rodado:
            type: string
            description: el rodado de la bicicleta
            example: rodado 29
        required: [rodado]